---

- name: Configure GitHub runner
  connection: local
  become: true
  become_user: root
  hosts: localhost
  vars:
    github_repo_url: ""
    github_runner_name: ""
    github_token: ""
  tasks:
    - name: Set the hostname
      ansible.builtin.hostname:
        name: GitRunner
    
    - name: Add the runner user if not already created
      ansible.builtin.user:
        name: runner
        shell: /bin/bash
        groups: runner
        append: yes
        create_home: true

    - name: Install Docker dependencies
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
        state: present
        update_cache: yes
    
    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    
    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
    
    - name: Install Docker
      apt:
        name: docker-ce
        state: present
        update_cache: yes
    
    - name: Add user to docker group
      user:
        name: "runner"
        groups: docker
        append: yes
    
    - name: Create GitHub runner directory
      file:
        path: /home/runner/actions-runner
        state: directory
        owner: "runner"
        group: "runner"
        mode: '0755'
    
    - name: Create entrypoint script
      become: true
      become_user: runner
      copy:
        dest: /home/runner/entrypoint.sh
        content: |
          #!/bin/bash
          set -e

          echo "=== Cleaning up existing runner configurations and work directories ==="
          rm -rf /home/runner/_work
          find /home/runner -name ".runner" -type f -delete
          find /home/runner -name ".credentials" -type d -exec rm -rf {} +
          find /home/runner -name ".credentials_rsaparams" -type f -delete

          echo "=== Fetching a fresh registration token via the GitHub API ==="
          REPO_STRING=$(echo ${REPO_URL} | cut -d'/' -f4,5)
          REGISTER_TOKEN=$(curl -s -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${GITHUB_PAT}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${REPO_STRING}/actions/runners/registration-token" | grep '"token"' | cut -d '"' -f4)

          if [ -z "${REGISTER_TOKEN}" ]; then
            echo "Failed to obtain registration token. Check your GITHUB_PAT."
            exit 1
          fi

          echo "=== Configuring the runner ==="
          ./config.sh --url ${REPO_URL} --token "${REGISTER_TOKEN}" --name "${RUNNER_NAME}" --unattended --replace

          echo "=== Removing the token from environment for security ==="
          unset REGISTER_TOKEN

          echo "=== Starting the runner ==="
          ./run.sh
        mode: '0755'

    - name: Run GitHub runner docker container
      become: true
      become_user: runner
      shell: |
        docker run -d \
          --name github-runner \
          --restart always \
          -v /home/runner/actions-runner:/home/runner/work \
          -v /var/run/docker.sock:/var/run/docker.sock \
          -v /home/runner/entrypoint.sh:/entrypoint.sh \
          -e RUNNER_NAME="{{ github_runner_name }}" \
          -e REPO_URL="{{ github_repo_url }}" \
          -e GITHUB_PAT="{{ github_pat }}" \
          ghcr.io/actions/actions-runner:latest \
          /entrypoint.sh
